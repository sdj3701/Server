레이스 컨디션
상황
같은 값을 더하고 빼줬는데 왜 값이 다를까?

테이블에서 콜라 주문을 했는데 주문 현황표를 보니 콜라를 주문한 것을 봐서 알바 3명이 테이블에 콜라 3개를 가져단 준 상황이다.
number++은 사실 3단계로 일을 하는 것이였다.

Interlocked.Increment(ref number); 라고 사용하면 특정 변수를 원자적으로 이뤄지는 것을 보장한다.
cpu 명령어에서 이거를 명령어를 들어주는 그런 명령어가 따로 있다.
단점은 성능에서 손해를 본다.

Interlocked.Decrement(ref number);은 반대로 number를 원자적으로 -- 해주는 것이다.

이 작업은 한번에 한명만 작업을 할 수 있다.
그래서 한명이 작업을 끝내야지 다른 사람이 작업을 할 수 있기 떄문에 문제가 없다.

나중에 값을 뽑는다고 number를 찍으면 안된다 이런 작업은 싱글스레드에서만 작업이 가능한 것이고 멀티스레드로 넘어가면 number값이 진짜인지 아닌지 확인할 수 없다.
이유는 그 사이에 다른 작업을 해서 값이 변경 될수도 있기 때문에 return값을 받는 변수를 만들어 실행하면 그 값을 확인해서 받을 수 있다.
ex) int afterValue = Interlocked.Increment(ref number);를 하면 number의 값을 받아올 수 있다.



































