멀티스레드 시작
static bool _stop = false; 라는 변수를 하나 선언하고
이제 Thread를 사용할 때 Stack Memory는 다 각자 자기만의 Stack Memory를 할당 받아 가지고 사용한다고 했지만
static를 사용하면 전역 변수들은 모든 Thread들이 다 공통으로 같이 사용해서 동시에 접근을 할 수 있다고 했음

ThreadMain()함수를 만들어주고 구현을 stop이 신호를 받으면 종료 하는 함수를 구현
Thread를 생성하기 위해서 Task를 사용해서 생성해주고 t.Start를 하면 시작을 한다.

Thread.Sleep(1000);은 1000 = 1초 이고
t.Wait(); 는 Join과 같은 제공 함수 이다.

이렇게 작성을 하게 되고 실행을 하게되면 작동이 잘된다.

하지만 릴리즈 모드로 바꿔주면 온갖 최적화가 들어가서 프로그램이 훨씬 더 빨라지게 됨
그리고 최적화를 많이 한다는 것은 우리가 프로그램을 개발할 때 디버깅 하기도 조금 더 어려워진다는 말이기도 합니다.
문제 1. 가끔 가다 브레이크 포인트를 잡았는데 여기서는 안걸린다거나 문제

이유는 컴퓨터에서 릴리즈 모드에서 자동으로 최적화를 해줬는데 알고보니 몰래 전역 변수에서 true로 바꾸어 줬는데 확인을 못하고
최적화를 시켜 악수가 된것이다.
이것을 안하는 방법이 여러가지가 있는데 volatile 이라를 것을 붙혀줘서 사용합니다.
이친구를 휘발성 이라는 데이터라고 선언을 하여 이친구는 언제 변할지 모르니까 최적화를 건들지 마라 그냥 가져다 사용해라 라고 써있는것이다.

그러면은 정상적으로 디버그 모드와 같이 결과가 난다.

c++에서 volatile이라는 문법이 있다.
c#에서는 캐시를 무시하고 최신 값을 가지와라 라는 의미도 있긴 한다 다른 이유도 있긴하다.

오늘 했던것에서는 릴리즈 모드에서 코드 최적화 때문에 일어나지 않던 버그들이 일어날 수가 있다는 사실이 핵심 내용이다.



















































